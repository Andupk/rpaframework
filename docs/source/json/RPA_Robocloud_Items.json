{
    "name": "RPA.Robocloud.Items",
    "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>A library for interacting with RPA work items.</p>\n<p>Work items are used for managing data that go through multiple\nactivities and tasks inside a process. Each execution of an activity receives\na work item from the previous activity, and after the activity is finished, it\nis forwarded to the next one. During the execution, it can freely\nread and update the data contained in an item.</p>\n<p>The default implementation uses Robocloud to store the data, but the library\nallows using custom adapters.</p>\n<p><strong>Default environment</strong></p>\n<p>The library automatically loads the work item defined by its runtime\nenvironment if the argument <tt class=\"docutils literal\">load_env</tt> is truthy (enabled by default).\nThis functionality is controlled by the following environment variables:</p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">RC_WORKSPACE_ID</tt>: The ID for the Robocloud workspace</li>\n<li><tt class=\"docutils literal\">RC_WORKITEM_ID</tt>:  The ID for the Robocloud work item</li>\n</ul>\n<p>These values are dynamic and should be set by Robocloud, but can be\noverriden manually while developing an activity.</p>\n<p><strong>Item structure</strong></p>\n<p>A work item's data payload is JSON and allows storing anything that is\nserializable. This library creates an object with the key 'variables'\nthat contains key-value pairs of a variable name and its contents.\nThese variables can be exposed to the Robot Framework task to be used directly.</p>\n<p>In addition to the data section, a work item can also contain files,\nwhich are stored by default in Robocorp's cloud. Adding and using\nfiles with work items requires no additional setup from the user.</p>\n<p><strong>Workflow</strong></p>\n<p>While a work item is loaded automatically when a suite starts, changes are\nnot automatically reflected back to the source. The work item will be modified\nlocally and then saved when the corresponding keyword is explicitly called.\nIt is recommended to defer all saves to the end of the task to prevent\nleaving work items in a half-modified state after failures.</p>\n<p><strong>Custom adapters</strong></p>\n<p>While Robocloud is the default implementation, it can also be replaced\nwith a custom adapter. The selection is based on either the <tt class=\"docutils literal\">default_adapter</tt>\nargument for the library, or the <tt class=\"docutils literal\">RPA_WORKITEMS_ADAPTER</tt> environment\nvariable. A custom implementation should inherit from the <tt class=\"docutils literal\">BaseAdapter</tt>\nclass. The library has a built-in alternative adapter called FileAdapter for\nstoring work items to disk.</p>\n<p><strong>Examples</strong></p>\n<p><strong>Robot Framework</strong></p>\n<p>In the following example the work item is modified locally and then saved\nback to Robocloud. Also note how the work item is loaded implicitly when\nthe suite starts.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">RPA.Robocloud.Items</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Save variables to Robocloud</span><span class=\"p\">\n    </span><span class=\"nf\">Add work item file</span><span class=\"p\">    </span><span class=\"s\">orders.xlsx</span><span class=\"p\">\n    </span><span class=\"nf\">Set work item variables</span><span class=\"p\">    </span><span class=\"s\">user=Dude</span><span class=\"p\">    </span><span class=\"s\">mail=address&#64;company.com</span><span class=\"p\">\n    </span><span class=\"nf\">Save work item</span>\n</pre>\n<p>Later in the process inside a different robot, we can use previously saved\nwork item variables and files. The library also allows injecting the variables\ndirectly into the current task execution.</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">RPA.Robocloud.Items</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Tasks ***</span><span class=\"p\">\n</span><span class=\"gu\">Use variables from Robocloud</span><span class=\"p\">\n    </span><span class=\"nf\">Set task variables from work item</span><span class=\"p\">\n    </span><span class=\"nf\">Log</span><span class=\"p\">    </span><span class=\"s\">Variables are now available: </span><span class=\"p\">${</span><span class=\"nv\">user</span><span class=\"p\">}</span><span class=\"s\">, </span><span class=\"p\">${</span><span class=\"nv\">mail</span><span class=\"p\">}\n    ${</span><span class=\"nv\">path</span><span class=\"p\">}=    </span><span class=\"nf\">Get work item file</span><span class=\"p\">    </span><span class=\"s\">orders.xlsx</span><span class=\"p\">\n    </span><span class=\"nf\">Log</span><span class=\"p\">    </span><span class=\"s\">Files are also stored to disk: </span><span class=\"p\">${</span><span class=\"nv\">path</span><span class=\"p\">}</span>\n</pre>\n<p><strong>Python</strong></p>\n<p>The library can also be used through Python, but it does not implicitly\nload the work item for the current execution.</p>\n<pre class=\"code python literal-block\">\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">RPA.Robocloud.Items</span> <span class=\"kn\">import</span> <span class=\"n\">Items</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">list_variables</span><span class=\"p\">(</span><span class=\"n\">item_id</span><span class=\"p\">):</span>\n    <span class=\"n\">library</span> <span class=\"o\">=</span> <span class=\"n\">Items</span><span class=\"p\">()</span>\n    <span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">load_work_item_from_environment</span><span class=\"p\">()</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">variable</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">get_work_item_variables</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\"> = </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>",
    "version": "",
    "named_args": true,
    "scope": "GLOBAL",
    "generated": "2020-12-01 13:50:50",
    "inits": [
        {
            "name": "Init",
            "args": [
                "load_env=True",
                "default_adapter=<class 'RPA.Robocloud.Items.RobocorpAdapter'>"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</div>\n</div>",
            "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.",
            "tags": [],
            "matched": true
        }
    ],
    "keywords": [
        {
            "name": "Add Work Item File",
            "args": [
                "path",
                "name=None"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Add given file to work item.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">Path to file on disk</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Destination name for file. If not given, current name\nof local file is used.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>NOTE</strong>: Files are not uploaded before work item is saved</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Add work item file</span><span class=\"p\">    </span><span class=\"c\">output.xls</span><span class=\"p\">\n</span><span class=\"c\">Save work item</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Add given file to work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Add Work Item Files",
            "args": [
                "pattern"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Add all files that match given pattern to work item.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param pattern:</th><td class=\"field-body\">Path wildcard pattern</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Add work item files</span><span class=\"p\">    </span><span class=\"c\">%{ROBOT_ROOT}/generated/*.csv</span><span class=\"p\">\n</span><span class=\"c\">Save work item</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Add all files that match given pattern to work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Clear Work Item",
            "args": [],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Remove all data in the current work item.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Clear work item</span><span class=\"p\">\n</span><span class=\"c\">Save work item</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Remove all data in the current work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Delete Work Item Variables",
            "args": [
                "*names",
                "force=True"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Delete variable(s) from the current work item.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param names:</th><td class=\"field-body\">Names of variables to remove</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param force:</th><td class=\"field-body\">Ignore variables that don't exist in work item</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Delete work item variables</span><span class=\"p\">    </span><span class=\"c\">username</span><span class=\"p\">    </span><span class=\"c\">email</span><span class=\"p\">\n</span><span class=\"c\">Save work item</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Delete variable(s) from the current work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Work Item File",
            "args": [
                "name",
                "path=None"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Get attached file from work item to disk.\nReturns the absolute path to the created file.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of attached file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">Destination path of file. If not given, current\nworking directory is used.</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${path}=</span><span class=\"p\">    </span><span class=\"c\">Get work item file</span><span class=\"p\">    </span><span class=\"c\">input.xls</span><span class=\"p\">\n</span><span class=\"c\">Open workbook</span><span class=\"p\">    </span><span class=\"c\">${path}</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Get attached file from work item to disk. Returns the absolute path to the created file.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Work Item Files",
            "args": [
                "pattern",
                "dirname=None"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Get files attached to work item that match given pattern.\nReturns a list of absolute paths to the downloaded files.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param pattern:</th><td class=\"field-body\">Filename wildcard pattern</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param dirname:</th><td class=\"field-body\">Destination directory, if not given robot root is used</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${paths}=</span><span class=\"p\">    </span><span class=\"c\">Get work item files</span><span class=\"p\">    </span><span class=\"c\">customer_*.xlsx</span><span class=\"p\">\n</span><span class=\"c\">FOR</span><span class=\"p\">  </span><span class=\"c\">${path}</span><span class=\"p\">  </span><span class=\"c\">IN</span><span class=\"p\">  </span><span class=\"c\">&#64;{paths}</span><span class=\"p\">\n    </span><span class=\"c\">Handle customer file</span><span class=\"p\">    </span><span class=\"c\">${path}</span><span class=\"p\">\n</span><span class=\"c\">END</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Get files attached to work item that match given pattern. Returns a list of absolute paths to the downloaded files.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Work Item Payload",
            "args": [],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Get the full JSON payload for a work item.</p>\n<p><strong>NOTE</strong>: Most use cases should prefer higher-level keywords.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${payload}=</span><span class=\"p\">    </span><span class=\"c\">Get work item payload</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Entire payload as dictionary: ${payload}</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Get the full JSON payload for a work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Work Item Variable",
            "args": [
                "name",
                "default=<object object at 0x15cbf58c0>"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Return a single variable value from the work item,\nor default value if defined and key does not exist.\nIf key does not exist and default is not defined, raises <cite>KeyError</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param key:</th><td class=\"field-body\">Name of variable</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param default:</th><td class=\"field-body\">Default value if key does not exist</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${username}=</span><span class=\"p\">    </span><span class=\"c\">Get work item variable</span><span class=\"p\">    </span><span class=\"c\">username</span><span class=\"p\">    </span><span class=\"c\">default=guest</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Return a single variable value from the work item, or default value if defined and key does not exist. If key does not exist and default is not defined, raises <cite>KeyError</cite>.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Work Item Variables",
            "args": [],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Read all variables from the current work item and\nreturn their names and values as a dictionary.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${variables}=</span><span class=\"p\">    </span><span class=\"c\">Get work item variables</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Username: ${variables}[username], Email: ${variables}[email]</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Read all variables from the current work item and return their names and values as a dictionary.",
            "tags": [],
            "matched": true
        },
        {
            "name": "List Work Item Files",
            "args": [],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>List the names of files attached to the current work item.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${names}=</span><span class=\"p\">    </span><span class=\"c\">List work item files</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Work item has files with names: ${names}</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "List the names of files attached to the current work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "List Work Item Variables",
            "args": [],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>List the variable names for the current work item.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${variables}=</span><span class=\"p\">    </span><span class=\"c\">List work item variables</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">Available variables in work item: ${variables}</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "List the variable names for the current work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Load Work Item",
            "args": [
                "workspace_id",
                "item_id"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Load work item for reading/writing.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param workspace_id:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Workspace ID which contains item</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param item_id:</th><td class=\"field-body\">Workitem ID to load</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt><strong>NOTE</strong>: Currently only one work item per execution is supported</dt>\n<dd>by Robocorp Cloud, which should be loaded automatically.</dd>\n</dl>\n</div>\n</div>",
            "shortdoc": "Load work item for reading/writing.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Load Work Item From Environment",
            "args": [],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Load current work item defined by the runtime environment.</p>\n<p>The corresponding environment variables are:</p>\n<ul class=\"simple\">\n<li>RC_WORKSPACE_ID</li>\n<li>RC_WORKITEM_ID</li>\n</ul>\n</div>\n</div>",
            "shortdoc": "Load current work item defined by the runtime environment.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Remove Work Item File",
            "args": [
                "name",
                "missing_ok=True"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Remove attached file from work item.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">Name of attached file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param missing_ok:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Do not raise exception if file doesn't exist</td>\n</tr>\n</tbody>\n</table>\n<p><strong>NOTE</strong>: Files are not deleted before work item is saved</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Remove work item file</span><span class=\"p\">    </span><span class=\"c\">input.xls</span><span class=\"p\">\n</span><span class=\"c\">Save work item</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Remove attached file from work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Remove Work Item Files",
            "args": [
                "pattern",
                "missing_ok=True"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Removes files attached to work item that match given pattern.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param pattern:</th><td class=\"field-body\">Filename wildcard pattern</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param missing_ok:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">Do not raise exception if file doesn't exist</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Remove work item files</span><span class=\"p\">    </span><span class=\"c\">*.xlsx</span><span class=\"p\">\n</span><span class=\"c\">Save work item</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Removes files attached to work item that match given pattern.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Save Work Item",
            "args": [],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Save the current data in the work item. If not saved,\nall changes are discarded when the library goes out of scope.</p>\n</div>\n</div>",
            "shortdoc": "Save the current data in the work item. If not saved, all changes are discarded when the library goes out of scope.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Set Task Variables From Work Item",
            "args": [],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Convert all variables in the current work item to\nRobot Framework task variables.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\"># Work item has variable INPUT_URL\nSet task variables from work item</span><span class=\"p\">\n</span><span class=\"c\">Log</span><span class=\"p\">    </span><span class=\"c\">The variable is now available: ${INPUT_URL}</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Convert all variables in the current work item to Robot Framework task variables.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Set Work Item Payload",
            "args": [
                "payload"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Set the full JSON payload for a work item.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param payload:</th><td class=\"field-body\">Content of payload, must be JSON-serializable</td>\n</tr>\n</tbody>\n</table>\n<p><strong>NOTE</strong>: Most use cases should prefer higher-level keywords.</p>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">${output}=</span><span class=\"p\">    </span><span class=\"c\">Create dictionary</span><span class=\"p\">    </span><span class=\"c\">url=example.com</span><span class=\"p\">    </span><span class=\"c\">username=Mark</span><span class=\"p\">\n</span><span class=\"c\">Set work item payload</span><span class=\"p\">    </span><span class=\"c\">${output}</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Set the full JSON payload for a work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Set Work Item Variable",
            "args": [
                "name",
                "value"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Set a single variable value in the current work item.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param key:</th><td class=\"field-body\">Name of variable</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param value:</th><td class=\"field-body\">Value of variable</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Set work item variable</span><span class=\"p\">    </span><span class=\"c\">username</span><span class=\"p\">    </span><span class=\"c\">MarkyMark</span><span class=\"p\">\n</span><span class=\"c\">Save work item</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Set a single variable value in the current work item.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Set Work Item Variables",
            "args": [
                "**kwargs"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Set multiple variables in the current work item.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param kwargs:</th><td class=\"field-body\">Pairs of variable names and values</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre class=\"code robotframework literal-block\">\n<span class=\"c\">Set work item variables</span><span class=\"p\">    </span><span class=\"c\">username=MarkyMark</span><span class=\"p\">    </span><span class=\"c\">email=mark&#64;example.com</span><span class=\"p\">\n</span><span class=\"c\">Save work item</span>\n</pre>\n</div>\n</div>",
            "shortdoc": "Set multiple variables in the current work item.",
            "tags": [],
            "matched": true
        }
    ],
    "all_tags": [],
    "contains_tags": false
}