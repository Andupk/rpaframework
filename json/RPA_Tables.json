{
    "name": "RPA.Tables",
    "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Robot Framework library for manipulating tabular data.</p>\n</div>\n</div>",
    "version": "",
    "named_args": true,
    "scope": "GLOBAL",
    "generated": "2020-11-04 12:58:44",
    "inits": [],
    "keywords": [
        {
            "name": "Add Table Column",
            "args": [
                "table",
                "name=None",
                "values=None"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Append a column to a table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param name:</th><td class=\"field-body\">name of new column</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param values:</th><td class=\"field-body\">row values (or single scalar value for all rows)</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Append a column to a table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Add Table Row",
            "args": [
                "table",
                "row",
                "index=None"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Append rows to a table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param row:</th><td class=\"field-body\">value for new row</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">index name for new row</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Append rows to a table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Clear Table",
            "args": [
                "table"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Clear table in-place, but keep columns.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to clear</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Clear table in-place, but keep columns.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Copy Table",
            "args": [
                "table"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Copy table object.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to copy</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Copy table object.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Create Table",
            "args": [
                "data=None",
                "trim=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Create Table object from data.</p>\n<p>Data can be a combination of various iterable containers, e.g.\nlist of lists, list of dicts, dict of lists.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param data:</th><td class=\"field-body\">source data for table</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param trim:</th><td class=\"field-body\">remove all empty rows from the end of the worksheet,\ndefault <cite>False</cite></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Create Table object from data.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Export Table",
            "args": [
                "table",
                "with_index=False",
                "as_list=True"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Convert table object to standard Python containers.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to convert to dict</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param with_index:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">include index in values</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param as_list:</th><td class=\"field-body\">export data as list instead of dict</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Convert table object to standard Python containers.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Filter Empty Rows",
            "args": [
                "table"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Remove all rows from the table which have only None values.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to filter</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Remove all rows from the table which have only None values.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Filter Table By Column",
            "args": [
                "table",
                "column",
                "operator",
                "value"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Return all rows where the column values match the given condition.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to filter</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column to filter with</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param operator:</th><td class=\"field-body\">filtering operator, e.g. &gt;, &lt;, ==, contains</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param value:</th><td class=\"field-body\">value to compare column to (using operator)</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Return all rows where the column values match the given condition.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Table Cell",
            "args": [
                "table",
                "row",
                "column"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Get a cell value from table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to read from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param row:</th><td class=\"field-body\">row of cell</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column of cell</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Get a cell value from table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Table Column",
            "args": [
                "table",
                "column",
                "as_list=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Get all column values from table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column to read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param as_list:</th><td class=\"field-body\">return list instead of dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Get all column values from table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Table Dimensions",
            "args": [
                "table"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Return table dimensions, as (rows, columns).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to inspect</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Return table dimensions, as (rows, columns).",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Table Row",
            "args": [
                "table",
                "index",
                "as_list=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Get a single row from table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param row:</th><td class=\"field-body\">row to read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param as_list:</th><td class=\"field-body\">return list instead of dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Get a single row from table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Get Table Slice",
            "args": [
                "table",
                "start=None",
                "end=None"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Return a new Table from a subset of given Table rows.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to read from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param start:</th><td class=\"field-body\">start index (inclusive)</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param start:</th><td class=\"field-body\">end index (inclusive)</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Return a new Table from a subset of given Table rows.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Group Table By Column",
            "args": [
                "table",
                "column"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Group table by <cite>column</cite> and return a list of grouped Tables.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to use for grouping</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column which is used as grouping criteria</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Group table by `column` and return a list of grouped Tables.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Pop Table Column",
            "args": [
                "table",
                "column=None",
                "as_list=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Remove column from table and return it.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column to remove</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param as_list:</th><td class=\"field-body\">return list instead of dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Remove column from table and return it.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Pop Table Row",
            "args": [
                "table",
                "index=None",
                "as_list=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Remove row from table and return it.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param index:</th><td class=\"field-body\">row index, pops first row if none given</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param as_list:</th><td class=\"field-body\">return list instead of dictionary</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Remove row from table and return it.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Read Table From Csv",
            "args": [
                "path",
                "header=None",
                "columns=None",
                "dialect=None",
                "delimiters=None"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Read a CSV file as a table.</p>\n<p>By default attempts to deduce the CSV format and headers\nfrom a sample of the input file. If it's unable to determine\nthe format automatically, the dialect and header will\nhave to be defined manually.</p>\n<p>Valid <tt class=\"docutils literal\">dialect</tt> values are <tt class=\"docutils literal\">excel</tt>, <tt class=\"docutils literal\"><span class=\"pre\">excel-tab</span></tt>, and <tt class=\"docutils literal\">unix</tt>,\nand <tt class=\"docutils literal\">header</tt> is boolean argument (<tt class=\"docutils literal\">True</tt>/<tt class=\"docutils literal\">False</tt>). Optionally a\nset of valid <tt class=\"docutils literal\">delimiters</tt> can be given as a string.</p>\n<p>The <tt class=\"docutils literal\">columns</tt> argument can be used to override the names of columns\nin the resulting table. The amount of columns must match the input\ndata.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to CSV file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param header:</th><td class=\"field-body\">CSV file includes header</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param columns:</th><td class=\"field-body\">names of columns in resulting table</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param dialect:</th><td class=\"field-body\">format of CSV file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param delimiters:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">string of possible delimiters</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Read a CSV file as a table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Rename Table Columns",
            "args": [
                "table",
                "columns",
                "strict=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Renames columns in the Table with given values. Columns with\nname as <cite>None</cite> will be use previous value.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param columns:</th><td class=\"field-body\">list of new column names</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param strict:</th><td class=\"field-body\">if True, raises ValueError if column lengths\ndo not match</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Renames columns in the Table with given values. Columns with name as `None` will be use previous value.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Requires Table",
            "args": [
                "obj"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n</div>\n</div>",
            "shortdoc": "",
            "tags": [],
            "matched": true
        },
        {
            "name": "Set Column As Index",
            "args": [
                "table",
                "column=None"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Set existing column as index for rows.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column to convert to index</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Set existing column as index for rows.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Set Table Cell",
            "args": [
                "table",
                "row",
                "column",
                "value"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Set a cell value in the table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param row:</th><td class=\"field-body\">row of cell</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column of cell</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param value:</th><td class=\"field-body\">value to set</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Set a cell value in the table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Set Table Column",
            "args": [
                "table",
                "column",
                "values"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Assign values to entire column in the table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param values:</th><td class=\"field-body\">value(s) to set</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Assign values to entire column in the table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Set Table Row",
            "args": [
                "table",
                "row",
                "values"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Assign values to a row in the table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param row:</th><td class=\"field-body\">row to modify</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param values:</th><td class=\"field-body\">value(s) to set</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Assign values to a row in the table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Sort Table By Column",
            "args": [
                "table",
                "column",
                "ascending=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Sort table in-place according to <cite>column</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to sort</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param column:</th><td class=\"field-body\">column to sort with</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\" colspan=\"2\">param ascending:</th></tr>\n<tr class=\"field\"><td>&nbsp;</td><td class=\"field-body\">table sort order</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Sort table in-place according to `column`.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Table Head",
            "args": [
                "table",
                "count=5",
                "as_list=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Return first <cite>count</cite> rows from table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to read from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param count:</th><td class=\"field-body\">number of lines to read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param as_list:</th><td class=\"field-body\">return list instead of Table</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Return first `count` rows from table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Table Tail",
            "args": [
                "table",
                "count=5",
                "as_list=False"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Return last <cite>count</cite> rows from table.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to read from</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param count:</th><td class=\"field-body\">number of lines to read</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param as_list:</th><td class=\"field-body\">return list instead of Table</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Return last `count` rows from table.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Trim Column Names",
            "args": [
                "table"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Remove all extraneous whitespace from column names.</p>\n</div>\n</div>",
            "shortdoc": "Remove all extraneous whitespace from column names.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Trim Empty Rows",
            "args": [
                "table"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Remove all rows from the end of the table\nwhich have only None values.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to filter</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Remove all rows from the end of the table which have only None values.",
            "tags": [],
            "matched": true
        },
        {
            "name": "Write Table To Csv",
            "args": [
                "table",
                "path",
                "header=True",
                "dialect=excel"
            ],
            "doc": "<div style=\"margin: 0\"><div class=\"document\">\n<p>Write a table as a CSV file.</p>\n<p>Valid <tt class=\"docutils literal\">dialect</tt> values are <tt class=\"docutils literal\">excel</tt>, <tt class=\"docutils literal\"><span class=\"pre\">excel-tab</span></tt>, and <tt class=\"docutils literal\">unix</tt>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param path:</th><td class=\"field-body\">path to write to</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param table:</th><td class=\"field-body\">table to write</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param header:</th><td class=\"field-body\">write columns as header to CSV file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">param dialect:</th><td class=\"field-body\">the format of output CSV</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>",
            "shortdoc": "Write a table as a CSV file.",
            "tags": [],
            "matched": true
        }
    ],
    "all_tags": [],
    "contains_tags": false
}