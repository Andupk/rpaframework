###################
Robot Framework API
###################

***********
Description
***********

:Library scope: 

Library for handling TAR and ZIP archives.

********
Keywords
********

:Add To Archive:
  :Arguments: files: typing.Any, archive_name: str, folder: str=None

  Add file(s) to the archive

  This keyword adds file or list of files into existing archive. Files
  can be added to archive structure with relative path using argument `folder`.


  .. code-block:: robotframework

      Add To Archive  extrafile.txt  myfiles.zip
      Add To Archive  stat.png       archive.tar.gz  images
      @{files}        Create List    filename1.txt   filename2.txt
      Add To Archive  ${files}       files.tar

:Archive Folder With Tar:
  :Arguments: folder: str, archive_name: str, recursive: bool=False, include: str=None, exclude: str=None

  Create a tar/tar.gz archive of a folder

  This keyword creates an TAR or TAR.GZ archive of a local folder. Type of archive
  is determined by the file extension. By default subdirectories are not
  included, but they can included using `recursive` argument.

  To include only certain files, like TXT files, the argument `include` can be used.
  Similarly to exclude certain file, like dotfiles, the argument `exclude` can be used.


  Example:

  .. code-block:: robotframework

      Archive Folder With TAR  ${CURDIR}${/}documents  documents.tar
      Archive Folder With TAR  ${CURDIR}${/}tasks      tasks.tar.gz   include=*.robot
      Archive Folder With TAR  ${CURDIR}${/}tasks      tasks.tar      exclude=/.*
      Archive Folder With TAR  ${CURDIR}${/}documents  documents.tar  recursive=True

:Archive Folder With Zip:
  :Arguments: folder: str, archive_name: str, recursive: bool=False, include: str=None, exclude: str=None, compression: str=stored, compression_level: int=1

  Create a zip archive of a folder

  This keyword creates an ZIP archive of a local folder. By default subdirectories are not
  included, but they can included using `recursive` argument.

  To include only certain files, like TXT files, the argument `include` can be used.
  Similarly to exclude certain file, like dotfiles, the argument `exclude` can be used.

  Compression methods:
      - stored, default
      - deflated
      - bzip2
      - lzma


  Example:

  .. code-block:: robotframework

      Archive Folder With Zip  ${CURDIR}${/}documents  mydocs.zip
      Archive Folder With Zip  ${CURDIR}${/}tasks      robottasks.zip   include=*.robot
      Archive Folder With Zip  ${CURDIR}${/}tasks      no_dotfiles.zip  exclude=/.*
      Archive Folder With Zip  ${CURDIR}${/}documents  documents.zip    recursive=True
      Archive Folder With Zip  ${CURDIR}               packagelzma.zip  compression=lzma
      Archive Folder With Zip  ${CURDIR}               bzipped.zip      compression=bzip2  compression_level=7

:Extract Archive:
  :Arguments: archive_name: str, path: str=None, members: typing.Any=None

  Extract files from archive into local directory

  This keyword supports extracting files from zip, tar and tar.gz archives.

  By default file is extracted into current working directory, but `path` argument
  can be set to define extraction path.


  Example.

  .. code-block:: robotframework

      Extract Archive    myfiles.zip   ${CURDIR}${/}extracted
      @{files}           Create List   filename1.txt    filename2.txt
      Extract Archive    archive.tar   C:${/}myfiles${/}  ${files}

:Extract File From Archive:
  :Arguments: filename: str, archive_name: str, path: str=None

  Extract a file from archive into local directory

  This keyword supports extracting a file from zip, tar and tar.gz archives.

  By default file is extracted into current working directory, but `path` argument can be set
  to define extraction path.


  Example.

  .. code-block:: robotframework

      Extract File From Archive    extrafile.txt   myfiles.zip
      Extract File From Archive    background.png  images.tar.gz  ${CURDIR}${/}extracted

:Get Archive Info:
  :Arguments: archive_name: str

  Get information about the archive

  Returns following file attributes in a dictionary:

      - filename
      - filemode
      - size
      - mtime
      - last modification time in format `%d.%m.%Y %H:%M:%S`


  Example.

  .. code-block:: robotframework

      &{archiveinfo}   Get Archive Info    myfiles.zip

:List Archive:
  :Arguments: archive_name: str

  List files in an archive

  Returns list of file, where each file in a list is a dictionary
  with following attributes:

      - name
      - size
      - mtime
      - last modification time in format `%d.%m.%Y %H:%M:%S`


  Example.

  .. code-block:: robotframework

      @{files}   List Archive    myfiles.zip
      FOR  ${file}  IN   ${files}
          Log  ${file}[filename]
          Log  ${file}[size]
          Log  ${file}[mtime]
      END
