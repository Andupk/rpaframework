###################
Robot Framework API
###################

***********
Description
***********

:Library scope: Global

`Netsuite` is a library for accessing Netsuite using NetSuite SOAP web service SuiteTalk.
The library extends the `netsuitesdk library`_.

More information available at `NetSuite SOAP webservice SuiteTalk`_.

.. _netsuitesdk library:
    https://github.com/fylein/netsuite-sdk-py

.. _NetSuite SOAP webservice SuiteTalk:
    http://www.netsuite.com/portal/platform/developer/suitetalk.shtml

**Examples**

**Robot Framework**

.. code-block:: robotframework

    *** Settings ***
    Library     RPA.Netsuite
    Library     RPA.Excel.Files
    Library     RPA.Tables
    Task Setup  Authorize Netsuite

    *** Tasks ***
    Get data from Netsuite and Store into Excel files
        ${accounts}=        Get Accounts   account_type=_expense
        ${accounts}=        Create table    ${accounts}
        Create Workbook
        Append Rows To Worksheet  ${accounts}
        Save Workbook       netsuite_accounts.xlsx
        Close Workbook
        ${bills}=           Get Vendor Bills
        ${bills}=           Create table    ${bills}
        Create Workbook
        Append Rows To Worksheet  ${bills}
        Save Workbook       netsuite_bills.xlsx
        Close Workbook


    *** Keywords ***
    Authorize Netsuite
        ${secrets}=     Get Secret   netsuite
        Connect
        ...        account=${secrets}[ACCOUNT]
        ...        consumer_key=${secrets}[CONSUMER_KEY]
        ...        consumer_secret=${secrets}[CONSUMER_KEY]
        ...        token_key=${secrets}[CONSUMER_SECRET]
        ...        token_secret=${secrets}[TOKEN_KEY]

**Python**

.. code-block:: python

    from RPA.Netsuite import Netsuite

    ns = Netsuite()
    ns.connect()
    accounts = ns.get_accounts()
    currencies = ns.get_currencies()

********
Keywords
********

:Connect:
  :Arguments: account: str = None, consumer_key: str = None, consumer_secret: str = None, token_key: str = None, token_secret: str = None

  Connect to Netsuite with credentials from environment
  variables.

  Parameters are not logged into Robot Framework log.


:Get Accounts:
  :Arguments: count: int = 100, account_type: str = None

  Get Accounts of any type or specified type.


:Get Classifications:
  Get all Netsuite Classifications


:Get Currencies:
  Get all Netsuite Currencies


:Get Currency:
  :Arguments: currency_id: str

  Get all a Netsuite Currency by its ID


:Get Departments:
  Get all Netsuite Departments


:Get Locations:
  Get all Netsuite Locations


:Get Vendor Bills:
  :Arguments: count: int = 10

  Get list of vendor bills


:Get Vendors:
  :Arguments: count: int = 10

  Get list of vendors


:Login:
  :Arguments: account: str = None, email: str = None, password: str = None, role: str = None, appid: str = None

  Login to Netsuite with credentials from environment variables

  Parameters are not logged into Robot Framework log.


:Netsuite Get:
  :Arguments: record_type: str = None, internal_id: str = None, external_id: str = None

  Get all records of given type and internalId and/or externalId.

  :raises ValueError: if record_type is not given

:Netsuite Get All:
  :Arguments: record_type: str

  Get all records of given type.

  :raises ValueError: if record_type is not given

:Netsuite Search:
  :Arguments: type_name: str, search_value: str, operator: str = contains, page_size: int = 5

  Search Netsuite for value from a type. Default operator is
  `contains`.


:Netsuite Search All:
  :Arguments: type_name: str, page_size: int = 20

  Search Netsuite for a type results.

