###################
Robot Framework API
###################

***********
Description
***********

:Library scope: Global

`Outlook.Application` is a library for controlling the Outlook application.

**Examples**

**Robot Framework**

.. code-block:: robotframework

    *** Settings ***
    Library                 RPA.Outlook.Application
    Task Setup              Open Application
    Suite Teardown          Quit Application

    *** Variables ***
    ${RECIPIENT}            address@domain.com

    *** Tasks ***
    Send message
        Send Message       recipients=${RECIPIENT}
        ...                subject=This is the subject
        ...                body=This is the message body
        ..                 attachments=approved.png

**Python**

.. code-block:: python

    from RPA.Outlook.Application import Application

    def send_message():
        app = Application()
        app.open_application()
        app.send_message(
            recipients='EMAILADDRESS_1, EMAILADDRESS_2',
            subject='email subject',
            body='email body message',
            attachments='../orders.csv'

For more information, see: https://docs.microsoft.com/en-us/previous-versions/office/developer/office-2007/bb219950(v=office.12)

********
Keywords
********

:Close Document:
  :Arguments: save_changes: bool = False

  Close the active document (if open).

:Open Application:
  :Arguments: visible: bool = False, display_alerts: bool = False

  Open the Outlook application.


:Quit Application:
  :Arguments: save_changes: bool = False

  Quit the application.

:Send Message:
  :Arguments: recipients: typing.Any, subject: str, body: str, html_body: bool = False, attachments: typing.Any = None

  Send message with Outlook


:Wait For Message:
  :Arguments: criterion: str = None, timeout: float = 5.0, interval: float = 1.0

  Wait for email matching `criterion` to arrive into mailbox.


  Possible wait criterias are: SUBJECT, SENDER and BODY

  Example:

  .. code-block:: robotframework

      Wait for message     SUBJECT:rpa task calling    timeout=300    interval=10
