###################
Robot Framework API
###################

***********
Description
***********

:Library scope: Global

`Notifier` is a library interfacting with different notification services.

Supported services:

- email
- gmail
- pushover
- slack
- telegram
- twilio

Services not supported yet:

- gitter
- join
- mailgun
- pagerduty
- popcornnotify
- pushbullet
- simplepush
- statuspage
- zulip

Read more at https://notifiers.readthedocs.io/en/latest/

**Examples**

**Robot Framework**

.. code-block:: robotframework

   *** Settings ***
   Library  RPA.Notifier

   *** Variables ***
   ${SLACK_WEBHOOK}   https://hooks.slack.com/services/WEBHOOKDETAILS
   ${CHANNEL}         notification-channel

   *** Tasks ***
   Lets notify
      Notify Slack   message from robot  channel=${CHANNEL}  webhook_url=${SLACK_WEBHOOK}

**Python**

.. code-block:: python

   from RPA.Notifier import Notifier

   library = Notifier()

   slack_attachments = [
      {
         "title": "attachment 1",
         "fallback": "liverpool logo",
         "image_url": "https://upload.wikimedia.org/wikipedia/fi/thumb/c/cd/Liverpool_FC-n_logo.svg/1200px-Liverpool_FC-n_logo.svg.png",
      }
   ]

   library.notify_slack(
      message='message for the Slack',
      channel="notification-channel",
      webhook_url=slack_webhook_url,
      attachments=slack_attachments,
   )

********
Keywords
********

:Notify Email:
  :Arguments: message: str = None, to: str = None, username: str = None, password: str = None, \*\*kwargs: dict

  Notify using email service


:Notify Gmail:
  :Arguments: message: str = None, to: str = None, username: str = None, password: str = None, \*\*kwargs: dict

  Notify using Gmail service


:Notify Pushover:
  :Arguments: message: str = None, user: str = None, token: str = None, \*\*kwargs: dict

  Notify using Pushover service


:Notify Slack:
  :Arguments: message: str = None, channel: str = None, webhook_url: str = None, \*\*kwargs: dict

  Notify using Slack service


:Notify Telegram:
  :Arguments: message: str = None, chat_id: str = None, token: str = None, \*\*kwargs: dict

  Notify using Telegram service


:Notify Twilio:
  :Arguments: message: str = None, number_from: str = None, number_to: str = None, account_sid: str = None, token: str = None, \*\*kwargs: dict

  Notify using Twilio service

